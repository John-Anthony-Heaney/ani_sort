library(devtools)
devtools::check()
install.packages(gganimate)
library(gganimate)
devtools::check()
install.packages(gganimate)
install.packages("devtools")
install.packages("gganimate")
install.packages("gganimate")
devtools::check()
devtools::check()
install.packages("ggplot2")
install.packages("ggplot2")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::use_mit_license()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
create_sorting_animation <- function(sorting_steps_df) {
# Convert the matrix to a data frame if it's not already
if (!is.data.frame(sorting_steps_df)) {
sorting_steps_df <- as.data.frame(sorting_steps_df)
}
# Ensure column names are set
colnames(sorting_steps_df) <- seq_len(ncol(sorting_steps_df))
# Initialize a ggplot
p <- ggplot(mapping = aes(group = step)) +
labs(title = 'Step: {frame_time}', x = 'Position', y = 'Value') +
transition_time(time = 1: nrow(sorting_steps_df)) +
ease_aes('linear')+
ylim(0, N)
# Add columns as separate geom_col layers
for (i in seq_len(ncol(sorting_steps_df))) {
p <- p + geom_col(data = data.frame(step = 1:nrow(sorting_steps_df),
position = i,
value = sorting_steps_df[[i]]),
aes(x = position, y = value, fill = position == find_differences_vectorized(sorting_steps_df)$left|position ==find_differences_vectorized(sorting_steps_df)$right),
show.legend = FALSE)}
p <- p + scale_fill_manual(values = c(`TRUE` = "blue", `FALSE` = "grey"))
animate(p, end_pause = 10, height = 500, width = 800)
}
create_sorting_animation(bubble_sort_steps(5))
create_sorting_animation <- function(sorting_steps_df) {
# Convert the matrix to a data frame if it's not already
if (!is.data.frame(sorting_steps_df)) {
sorting_steps_df <- as.data.frame(sorting_steps_df)
}
# Ensure column names are set
colnames(sorting_steps_df) <- seq_len(ncol(sorting_steps_df))
N <- ncol(sorting_steps_df)
# Initialize a ggplot
p <- ggplot(mapping = aes(group = step)) +
labs(title = 'Step: {frame_time}', x = 'Position', y = 'Value') +
transition_time(time = 1: nrow(sorting_steps_df)) +
ease_aes('linear')+
ylim(0, N)
# Add columns as separate geom_col layers
for (i in seq_len(ncol(sorting_steps_df))) {
p <- p + geom_col(data = data.frame(step = 1:nrow(sorting_steps_df),
position = i,
value = sorting_steps_df[[i]]),
aes(x = position, y = value, fill = position == find_differences_vectorized(sorting_steps_df)$left|position ==find_differences_vectorized(sorting_steps_df)$right),
show.legend = FALSE)}
p <- p + scale_fill_manual(values = c(`TRUE` = "blue", `FALSE` = "grey"))
animate(p, end_pause = 10, height = 500, width = 800)
}
create_sorting_animation(bubble_sort_steps(5))
ubble_sort_steps(5)
bubble_sort_steps(5)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
devtools::check()
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
aniSort::bubble_sort_steps(5)
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
devtools::check()
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
aniSort::create_sorting_animation.SortingStepsMatrix(aniSort::bubble_sort_steps(5))
devtools::check()
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
devtools::check()
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
devtools::check()
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
devtools::check()
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
devtools::check()
aniSort::create_sorting_animation(aniSort::bubble_sort_steps(5))
create_sorting_animation(bubble_sort_steps(5))
devtools::check()
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
devtools::check()
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
class(bubble_sort_steps(5))
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
devtools::check()
devtools::load_all()
create_sorting_animation(bubble_sort_steps(5))
bubble_sort_steps(5)
create_sorting_animation
create_sorting_animation.SortingStepsMatrix(bubble_sort_steps(5))
create_sorting_animation.SortingStepsMatrix(bubble_sort_steps(5))
devtools::check()
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
usethis::use_namespace()
?usethis::use_namespace
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
devtools::check()
devtools::check()
devtools::check()
create_sorting_animation(bubble_sort_steps(5))
usethis::use_vignette("bubble-sort")
usethis::use_vignette("insertion-sort")
library(aniSort)
create_sorting_animation(insertion_sort_steps(5))
devtools::check()
devtools::check()
install.packages("qpdf")
devtools::check()
devtools::check()
devtools::check()
?devtools::check
devtools::check()
devtools::check()
devtools::check()
library(aniSort)
create_sorting_animation(bubble_sort_steps(5))
library(aniSort)
create_sorting_animation(insertion_sort_steps(5))
library(aniSort)
create_sorting_animation(bubble_sort_steps(10))
library(aniSort)
library(aniSort)
usethis::use_github()
devtools::check()
library(aniSort)
detach("package:aniSort", unload = TRUE)
devtools::check()
devtools::check()
